# config data bases
spring:
  # config Rabbitmq
  cloud:
    stream:
      #bindings:
      binders:
        rabbit1:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: 192.168.107.22
                port: 5672
                username: admin
                password: admin
  #profiles: test
  #jmx:
    #enabled: false
# Datasource and JPA configuration to be used for using the same tokenstore as the authorization server for
# the defined resource server. Note that there can't be 2 different root nodes, so datasource falls under the "spring" node.
  datasource:
    url: jdbc:mysql://192.168.107.35:3306/auth
    username: root
    password: mysql
    driver-class: com.mysql.jdbc.Driver
    initialize: true
    separator: ^
    continueOnError: false
    schema: classpath:/db-scripts/0.0.1/schema.sql
    data: classpath:/db-scripts/0.0.1/data.sql
#
  jpa:
    database: MYSQL
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: true
    hibernate:
      #ddl-auto: create
      show_sql: true
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy

  #! define manager security credentials
  security:
    user:
      name: manager
      password: transoft2
      roles: manager

# Logging settings.
logging:
  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: 
    com.transoft.completeair: DEBUG
    # com.transoft.oauth: DEBUG

  # Logger-specific levels.
  #!loggers:
    #!root: DEBUG
    # Redirects SQL logs to a separate file
    #!org.hibernate.SQL: DEBUG
    #!org.springframework.web: DEBUG

# Note: import disable mode product and active mode Dev
server:
  port: 9999
  contextPath: /uaa
# config security
security:
  #sessions: if_required
  user: 
    password: password
#security:
  #enable-csrf: false
  #user:
    #password: password
  #oauth2:
    #client:
      #clientId: client
      #clientSecret: secret
      #authorized-grant-types: client_credentials,refresh_token,password
      #scope: openid
#security.ignored: /resources/**

# config registry eureka
eureka:
  client:
    serviceUrl:
      defaultZone:  http://192.168.107.20:8761/eureka/
  instance:
    metadataMap:
      instanceId: ${spring.application.name}:${server.port}
